apiVersion: apps/v1
kind: Deployment
metadata:
  name: actual
  namespace: apps
spec:
  replicas: 1
  selector:
    matchLabels:
      app: actual
  template:
    metadata:
      labels:
        app: actual
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
        - name: actual
          image: docker.io/actualbudget/actual-server:edge
          ports:
            - containerPort: 5006
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: actual-data
              mountPath: /data
          livenessProbe:
            exec:
              command:
                - node
                - src/scripts/health-check.js
            initialDelaySeconds: 20
            periodSeconds: 60
            timeoutSeconds: 10
            failureThreshold: 3
      volumes:
        - name: actual-data
          persistentVolumeClaim:
            claimName: actual-config
---

apiVersion: v1
kind: Service
metadata:
  name: actual-svc
  namespace: apps
spec:
  selector:
    app: actual
  ports:
    - name: http
      port: 5006
      targetPort: 5006
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: actual-ingress
  namespace: apps
spec:
  ingressClassName: nginx
  rules:
  - host: actual.cluster.nelsondane.com
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: actual-svc
            port:
              number: 5006
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: actual-config
  namespace: apps
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: longhorn
