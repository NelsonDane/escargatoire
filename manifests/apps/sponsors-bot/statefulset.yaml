apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: sponsors-bot
  namespace: apps
spec:
  serviceName: sponsors-bot
  replicas: 1
  selector:
    matchLabels:
      app: sponsors-bot
  template:
    metadata:
      labels:
        app: sponsors-bot
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
        - name: sponsors-bot-worker
          image: ghcr.io/nelsondane/sponsors-bot:latest
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: config
              mountPath: /app/config.yaml
              subPath: config.yaml
        - name: sponsors-bot-web
          image: ghcr.io/nelsondane/sponsors-bot-web:latest
          ports:
            - containerPort: 8000
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: config
              mountPath: /app/config.yaml
              subPath: config.yaml
        - name: cloudflare
          image: cloudflare/cloudflared:latest
          command: ["cloudflared", "tunnel", "--no-autoupdate", "run", "--token", "$(TUNNEL_TOKEN)"]
          env:
            - name: TUNNEL_TOKEN
              valueFrom:
                secretKeyRef:
                  name: sponsors-bot-config
                  key: CLOUDFLARE_TUNNEL_TOKEN
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
      volumes:
        - name: config
          secret:
            secretName: sponsors-bot-config
