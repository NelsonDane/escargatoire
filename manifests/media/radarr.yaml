apiVersion: apps/v1
kind: Deployment
metadata:
  name: radarr
  namespace: media
spec:
  replicas: 1
  selector:
    matchLabels:
      app: radarr
  template:
    metadata:
      labels:
        app: radarr
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: radarr
          image: ghcr.io/home-operations/radarr:5.28.0@sha256:80dec94f1eea0715471853011efdf2c49cf92f8fe3b17b722ad8f8a637e3fead
          ports:
            - containerPort: 7878
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]
          env:
            - name: TZ
              value: "America/New_York"
          volumeMounts:
            - name: config
              mountPath: /config
            - name: media
              mountPath: /media
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: radarr-config
        - name: media
          persistentVolumeClaim:
            claimName: media
---
apiVersion: v1
kind: Service
metadata:
  name: radarr
  namespace: media
spec:
  selector:
    app: radarr
  ports:
    - name: http
      port: 7878
      targetPort: 7878
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: radarr-ingress
  namespace: media
spec:
  ingressClassName: nginx
  rules:
  - host: radarr.cluster.nelsondane.com
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: radarr
            port:
              number: 7878
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: radarr-config
  namespace: media
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 4Gi
  storageClassName: longhorn
